//Time complexity : O(n)
//Space complexity: O(n)
//successfully executed on leetCode

class BinaryTreeRightSideViewBFS {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        if(root==null){
            return result;
        }
        Queue<TreeNode> queue= new LinkedList<>();
        queue.add(root);
        while(!queue.isEmpty()){
        int size= queue.size();
        for(int i=0; i<size;i++){
            TreeNode curr = queue.poll(); 
            if(i==size-1){
                result.add(curr.val);
            }
            if(curr.left!= null){
                queue.add(curr.left);
            }
             if(curr.right!= null){
                queue.add(curr.right);
            }
        }
        }
        return result;
    }
}
